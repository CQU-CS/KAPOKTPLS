<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqu.kapok.kapoktpls.dao.BuildingSaleDao">

    <resultMap id="BaseResultMap" type="com.cqu.kapok.kapoktpls.entity.BuildingSale">
        <!--@Table building_sale-->
        <result property="buildingSaleId" column="building_sale_id" jdbcType="INTEGER"/>
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="companyId" column="company_id" jdbcType="INTEGER"/>
        <result property="buildingSaleNum" column="building_sale_num" jdbcType="INTEGER"/>
        <result property="buildingSalePrice" column="building_sale_price" jdbcType="INTEGER"/>
        <result property="buildingSaleDate" column="building_sale_date" jdbcType="TIMESTAMP"/>
        <result property="payStatus" column="pay_status" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          building_sale_id, building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status
        from building_sale
        where building_sale_id = #{buildingSaleId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          building_sale_id, building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status
        from building_sale
        <where>
            <if test="buildingSaleId != null">
                and building_sale_id = #{buildingSaleId}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="buildingSaleNum != null">
                and building_sale_num = #{buildingSaleNum}
            </if>
            <if test="buildingSalePrice != null">
                and building_sale_price = #{buildingSalePrice}
            </if>
            <if test="buildingSaleDate != null">
                and building_sale_date = #{buildingSaleDate}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          building_sale_id, building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status
        from TESTKAPOK.building_sale
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from building_sale
        <where>
            <if test="buildingSaleId != null">
                and building_sale_id = #{buildingSaleId}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="buildingSaleNum != null">
                and building_sale_num = #{buildingSaleNum}
            </if>
            <if test="buildingSalePrice != null">
                and building_sale_price = #{buildingSalePrice}
            </if>
            <if test="buildingSaleDate != null">
                and building_sale_date = #{buildingSaleDate}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
        </where>
    </select>
    <select id="queryByBuildingSale" resultType="com.cqu.kapok.kapoktpls.entity.BuildingSale">
        select *
        from building_sale
        <where>
            <if test="buildingSaleId != null">
                and building_sale_id = #{buildingSaleId}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="buildingSaleNum != null">
                and building_sale_num = #{buildingSaleNum}
            </if>
            <if test="buildingSalePrice != null">
                and building_sale_price = #{buildingSalePrice}
            </if>
            <if test="buildingSaleDate != null">
                and building_sale_date = #{buildingSaleDate}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
        </where>
    </select>
    <select id="queryByBuildingSaleDTO" resultType="com.cqu.kapok.kapoktpls.entity.BuildingSale">
        select *
        from building_sale
        <where>
            <if test="buildingSaleId != null">
                and building_sale_id = #{buildingSaleId}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="buildingSaleNum != null">
                and building_sale_num = #{buildingSaleNum}
            </if>
            <if test="buildingSalePrice != null">
                and building_sale_price = #{buildingSalePrice}
            </if>
            <if test="buildingSaleDate != null">
                and building_sale_date = #{buildingSaleDate}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
        </where>
        limit #{page}, #{limit}
    </select>
    <select id="getBuildingSaleByConditionCount" resultType="java.lang.Long">
        select count(1)
        from building_sale
        <where>
            <if test="buildingSaleId != null">
                and building_sale_id = #{buildingSaleId}
            </if>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="companyId != null">
                and company_id = #{companyId}
            </if>
            <if test="buildingSaleNum != null">
                and building_sale_num = #{buildingSaleNum}
            </if>
            <if test="buildingSalePrice != null">
                and building_sale_price = #{buildingSalePrice}
            </if>
            <if test="buildingSaleDate != null">
                and building_sale_date = #{buildingSaleDate}
            </if>
            <if test="payStatus != null">
                and pay_status = #{payStatus}
            </if>
        </where>
    </select>
    <!--    获取本月建筑出售总收入-->
    <select id="getMonthPrice" resultType="java.lang.Long">
        SELECT sum(building_sale_price) FROM building_sale
        WHERE DATE_FORMAT( building_sale_date, '%Y%m' ) = DATE_FORMAT( #{date} , '%Y%m' ) and pay_status = 1
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="buildingSaleId" useGeneratedKeys="true">
        insert into building_sale(building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status)
        values (#{buildingId}, #{companyId}, #{buildingSaleNum}, #{buildingSalePrice}, #{buildingSaleDate}, #{payStatus})
    </insert>

    <insert id="insertBatch" keyProperty="buildingSaleId" useGeneratedKeys="true">
        insert into building_sale(building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.buildingId}, #{entity.companyId}, #{entity.buildingSaleNum}, #{entity.buildingSalePrice}, #{entity.buildingSaleDate}, #{entity.payStatus})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="buildingSaleId" useGeneratedKeys="true">
        insert into building_sale(building_id, company_id, building_sale_num, building_sale_price, building_sale_date, pay_status)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.buildingId}, #{entity.companyId}, #{entity.buildingSaleNum}, #{entity.buildingSalePrice}, #{entity.buildingSaleDate}, #{entity.payStatus})
        </foreach>
        on duplicate key update
        building_id = values(building_id),
        company_id = values(company_id),
        building_sale_num = values(building_sale_num),
        building_sale_price = values(building_sale_price),
        building_sale_date = values(building_sale_date),
        pay_status = values(pay_status)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update building_sale
        <set>
            <if test="buildingId != null">
                building_id = #{buildingId},
            </if>
            <if test="companyId != null">
                company_id = #{companyId},
            </if>
            <if test="buildingSaleNum != null">
                building_sale_num = #{buildingSaleNum},
            </if>
            <if test="buildingSalePrice != null">
                building_sale_price = #{buildingSalePrice},
            </if>
            <if test="buildingSaleDate != null">
                building_sale_date = #{buildingSaleDate},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
        </set>
        where building_sale_id = #{buildingSaleId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from building_sale where building_sale_id = #{buildingSaleId}
    </delete>

</mapper>

