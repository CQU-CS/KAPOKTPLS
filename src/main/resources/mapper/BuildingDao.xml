<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cqu.kapok.kapoktpls.dao.BuildingDao">

    <resultMap id="BaseResultMap" type="com.cqu.kapok.kapoktpls.entity.Building">
        <!--@Table building-->
        <result property="buildingId" column="building_id" jdbcType="INTEGER"/>
        <result property="addressId" column="address_id" jdbcType="INTEGER"/>
        <result property="buildingType" column="building_type" jdbcType="VARCHAR"/>
        <result property="buildingName" column="building_name" jdbcType="VARCHAR"/>
        <result property="buildingBuyTime" column="building_buy_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          building_id, address_id, building_type, building_name, building_buy_time
        from building
        where building_id = #{buildingId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          building_id, address_id, building_type, building_name, building_buy_time
        from building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="addressId != null">
                and address_id = #{addressId}
            </if>
            <if test="buildingType != null and buildingType != ''">
                and building_type = #{buildingType}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingBuyTime != null">
                and building_buy_time = #{buildingBuyTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          building_id, address_id, building_type, building_name, building_buy_time
        from TESTKAPOK.building
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="addressId != null">
                and address_id = #{addressId}
            </if>
            <if test="buildingType != null and buildingType != ''">
                and building_type = #{buildingType}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingBuyTime != null">
                and building_buy_time = #{buildingBuyTime}
            </if>
        </where>
    </select>
    <select id="queryByBuilding" resultType="com.cqu.kapok.kapoktpls.entity.Building">
        select *
        from building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="addressId != null">
                and address_id = #{addressId}
            </if>
            <if test="buildingType != null and buildingType != ''">
                and building_type = #{buildingType}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingBuyTime != null">
                and building_buy_time = #{buildingBuyTime}
            </if>
        </where>
    </select>
    <select id="queryByBuildingDTO" resultType="com.cqu.kapok.kapoktpls.entity.Building">
        select *
        from building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="addressId != null">
                and address_id = #{addressId}
            </if>
            <if test="buildingType != null and buildingType != ''">
                and building_type = #{buildingType}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingBuyTime != null">
                and building_buy_time = #{buildingBuyTime}
            </if>
        </where>
        limit #{page}, #{limit}
    </select>
    <select id="getBuildingByConditionCount" resultType="java.lang.Long">
        select count(1)
        from building
        <where>
            <if test="buildingId != null">
                and building_id = #{buildingId}
            </if>
            <if test="addressId != null">
                and address_id = #{addressId}
            </if>
            <if test="buildingType != null and buildingType != ''">
                and building_type = #{buildingType}
            </if>
            <if test="buildingName != null and buildingName != ''">
                and building_name = #{buildingName}
            </if>
            <if test="buildingBuyTime != null">
                and building_buy_time = #{buildingBuyTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="buildingId" useGeneratedKeys="true">
        insert into building(address_id, building_type, building_name, building_buy_time)
        values (#{addressId}, #{buildingType}, #{buildingName}, #{buildingBuyTime})
    </insert>

    <insert id="insertBatch" keyProperty="buildingId" useGeneratedKeys="true">
        insert into building(address_id, building_type, building_name, building_buy_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.addressId}, #{entity.buildingType}, #{entity.buildingName}, #{entity.buildingBuyTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="buildingId" useGeneratedKeys="true">
        insert into building(address_id, building_type, building_name, building_buy_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.addressId}, #{entity.buildingType}, #{entity.buildingName}, #{entity.buildingBuyTime})
        </foreach>
        on duplicate key update
        address_id = values(address_id),
        building_type = values(building_type),
        building_name = values(building_name),
        building_buy_time = values(building_buy_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update building
        <set>
            <if test="addressId != null">
                address_id = #{addressId},
            </if>
            <if test="buildingType != null and buildingType != ''">
                building_type = #{buildingType},
            </if>
            <if test="buildingName != null and buildingName != ''">
                building_name = #{buildingName},
            </if>
            <if test="buildingBuyTime != null">
                building_buy_time = #{buildingBuyTime},
            </if>
        </set>
        where building_id = #{buildingId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from building where building_id = #{buildingId}
    </delete>

</mapper>

